{"codeList":["from pymilvus import connections, Collection, FieldSchema, CollectionSchema, DataType\nimport random\n\n# Connect to Milvus\nconnections.connect(\n    host=\"127.0.0.1\", # Replace with your Milvus server IP\n    port=\"19530\"\n)\n\n# Create schema\nfields = [\n    FieldSchema(name=\"film_id\", dtype=DataType.INT64, is_primary=True),\n    FieldSchema(name=\"filmVector\", dtype=DataType.FLOAT_VECTOR, dim=5), # Vector field for film vectors\n    FieldSchema(name=\"posterVector\", dtype=DataType.FLOAT_VECTOR, dim=5)] # Vector field for poster vectors\n\nschema = CollectionSchema(fields=fields,enable_dynamic_field=False)\n\n# Create collection\ncollection = Collection(name=\"test_collection\", schema=schema)\n\n# Create index for each vector field\nindex_params = {\n    \"metric_type\": \"L2\",\n    \"index_type\": \"IVF_FLAT\",\n    \"params\": {\"nlist\": 128},\n}\n\ncollection.create_index(\"filmVector\", index_params)\ncollection.create_index(\"posterVector\", index_params)\n\n# Generate random entities to insert\nentities = []\n\nfor _ in range(1000):\n    # generate random values for each field in the schema\n    film_id = random.randint(1, 1000)\n    film_vector = [ random.random() for _ in range(5) ]\n    poster_vector = [ random.random() for _ in range(5) ]\n\n    # create a dictionary for each entity\n    entity = {\n        \"film_id\": film_id,\n        \"filmVector\": film_vector,\n        \"posterVector\": poster_vector\n    }\n\n    # add the entity to the list\n    entities.append(entity)\n    \ncollection.insert(entities)\n","from pymilvus import AnnSearchRequest\n\n# Create ANN search request 1 for filmVector\nquery_filmVector = [[0.8896863042430693, 0.370613100114602, 0.23779315077113428, 0.38227915951132996, 0.5997064603128835]]\n\nsearch_param_1 = {\n    \"data\": query_filmVector, # Query vector\n    \"anns_field\": \"filmVector\", # Vector field name\n    \"param\": {\n        \"metric_type\": \"L2\", # This parameter value must be identical to the one used in the collection schema\n        \"params\": {\"nprobe\": 10}\n    },\n    \"limit\": 2 # Number of search results to return in this AnnSearchRequest\n}\nrequest_1 = AnnSearchRequest(**search_param_1)\n\n# Create ANN search request 2 for posterVector\nquery_posterVector = [[0.02550758562349764, 0.006085637357292062, 0.5325251250159071, 0.7676432650114147, 0.5521074424751443]]\nsearch_param_2 = {\n    \"data\": query_posterVector, # Query vector\n    \"anns_field\": \"posterVector\", # Vector field name\n    \"param\": {\n        \"metric_type\": \"L2\", # This parameter value must be identical to the one used in the collection schema\n        \"params\": {\"nprobe\": 10}\n    },\n    \"limit\": 2 # Number of search results to return in this AnnSearchRequest\n}\nrequest_2 = AnnSearchRequest(**search_param_2)\n\n# Store these two requests as a list in `reqs`\nreqs = [request_1, request_2]\n","from pymilvus import WeightedRanker\n# Use WeightedRanker to combine results with specified weights\n# Assign weights of 0.8 to text search and 0.2 to image search\nrerank = WeightedRanker(0.8, 0.2)  \n","# Alternatively, use RRFRanker for reciprocal rank fusion reranking\nfrom pymilvus import RRFRanker\n\nrerank = RRFRanker()\n","# Before conducting hybrid search, load the collection into memory.\ncollection.load()\n\nres = collection.hybrid_search(\n    reqs, # List of AnnSearchRequests created in step 1\n    rerank, # Reranking strategy specified in step 2\n    limit=2 # Number of final search results to return\n)\n\nprint(res)\n","[\"['id: 844, distance: 0.006047376897186041, entity: {}', 'id: 876, distance: 0.006422005593776703, entity: {}']\"]\n"],"headingContent":"Hybrid Search","anchorList":[{"label":"Pencarian Hibrida","href":"Hybrid-Search","type":1,"isActive":false},{"label":"Persiapan","href":"Preparations","type":2,"isActive":false},{"label":"Langkah 1: Membuat Beberapa Instance AnnSearchRequest","href":"Step-1-Create-Multiple-AnnSearchRequest-Instances","type":2,"isActive":false},{"label":"Langkah 2: Konfigurasikan Strategi Perangkingan Ulang","href":"Step-2-Configure-a-Reranking-Strategy","type":2,"isActive":false},{"label":"Langkah 3: Lakukan Pencarian Hibrida","href":"Step-3-Perform-a-Hybrid-Search","type":2,"isActive":false},{"label":"Batas","href":"Limits","type":2,"isActive":false},{"label":"PERTANYAAN UMUM","href":"FAQ","type":2,"isActive":false}]}
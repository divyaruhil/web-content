{"codeList":["filter = 'rating >= 4'​\n\n","filter = 'discount <= 10'​\n\n","filter = 'color in [\"red\", \"green\", \"blue\"]'​\n\n","filter = 'name LIKE \"Prod%\"'​\n\n","filter = 'name LIKE \"%XYZ\"'​\n\n","filter = 'name LIKE \"%Pro%\"'​\n\n","filter = 'total == base_price + tax'​\n\n","filter = 'quantity - quantity_sold > 50'​\n\n","filter = 'price * quantity > 1000'​\n\n","filter = 'total_price / quantity < 50'​\n\n","filter = 'id % 2 == 0'​\n\n","filter = 'price ** 2 > 1000'​\n\n","filter = 'price > 100 AND stock > 50'​\n\n","filter = 'color == \"red\" OR color == \"blue\"'​\n\n","filter = 'NOT color == \"green\"'​\n\n","filter = 'description IS NULL'\n","filter = 'description IS NOT NULL'\n","filter = 'description IS NOT NULL AND price > 10'\n","data = [\n  {\n      \"metadata\": {\"category\": \"electronics\", \"price\": 99.99, \"brand\": \"BrandA\"},\n      \"pk\": 1,\n      \"embedding\": [0.12, 0.34, 0.56]\n  },\n  {\n      \"metadata\": None, # Entire JSON object is null\n      \"pk\": 2,\n      \"embedding\": [0.56, 0.78, 0.90]\n  },\n  {  # JSON field `metadata` is completely missing\n      \"pk\": 3,\n      \"embedding\": [0.91, 0.18, 0.23]\n  },\n  {\n      \"metadata\": {\"category\": None, \"price\": 99.99, \"brand\": \"BrandA\"}, # Individual key value is null\n      \"pk\": 4,\n      \"embedding\": [0.56, 0.38, 0.21]\n  }\n]\n","filter = 'metadata IS NULL'\n\n# Example output:\n# data: [\n#     \"{'metadata': None, 'pk': 2}\",\n#     \"{'metadata': None, 'pk': 3}\"\n# ]\n","filter = 'metadata IS NOT NULL'\n\n# Example output:\n# data: [\n#     \"{'metadata': {'category': 'electronics', 'price': 99.99, 'brand': 'BrandA'}, 'pk': 1}\",\n#     \"{'metadata': {'category': None, 'price': 99.99, 'brand': 'BrandA'}, 'pk': 4}\"\n# ]\n","data = [\n  {\n      \"tags\": [\"pop\", \"rock\", \"classic\"],\n      \"ratings\": [5, 4, 3],\n      \"pk\": 1,\n      \"embedding\": [0.12, 0.34, 0.56]\n  },\n  {\n      \"tags\": None,  # Entire ARRAY is null\n      \"ratings\": [4, 5],\n      \"pk\": 2,\n      \"embedding\": [0.78, 0.91, 0.23]\n  },\n  {  # The tags field is completely missing\n      \"ratings\": [9, 5],\n      \"pk\": 3,\n      \"embedding\": [0.18, 0.11, 0.23]\n  }\n]\n","filter = 'tags IS NULL'\n\n# Example output:\n# data: [\n#     \"{'tags': None, 'ratings': [4, 5], 'embedding': [0.78, 0.91, 0.23], 'pk': 2}\",\n#     \"{'tags': None, 'ratings': [9, 5], 'embedding': [0.18, 0.11, 0.23], 'pk': 3}\"\n# ]\n","filter = 'tags IS NOT NULL'\n\n# Example output:\n# data: [\n#     \"{'metadata': {'category': 'electronics', 'price': 99.99, 'brand': 'BrandA'}, 'pk': 1}\",\n#     \"{'metadata': {'category': None, 'price': 99.99, 'brand': 'BrandA'}, 'pk': 4}\"\n# ]\n","filter = 'product[\"price\"] > 1000'​\n\n","filter = 'history_temperatures[0] > 30'​\n\n"],"headingContent":"Basic Operators​","anchorList":[{"label":"基本演算子","href":"Basic-Operators​","type":1,"isActive":false},{"label":"比較演算子","href":"Comparison-operators​","type":2,"isActive":false},{"label":"範囲演算子","href":"Range-operators​","type":2,"isActive":false},{"label":"算術演算子","href":"Arithmetic-Operators​","type":2,"isActive":false},{"label":"論理演算子","href":"Logical-Operators​","type":2,"isActive":false},{"label":"IS NULL および IS NOT NULL 演算子","href":"IS-NULL-and-IS-NOT-NULL-Operators","type":2,"isActive":false},{"label":"JSONおよびARRAYフィールドで基本演算子を使用する際のヒント","href":"Tips-on-Using-Basic-Operators-with-JSON-and-ARRAY-Fields​","type":2,"isActive":false},{"label":"結論","href":"Conclusion​","type":2,"isActive":false}]}
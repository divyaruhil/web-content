{"codeList":["from pymilvus import MilvusClient\n\n# With TTL\nclient.create_collection(\n    collection_name=\"customized_setup_5\",\n    schema=schema,\n    # highlight-start\n    properties={\n        \"collection.ttl.seconds\": 1209600\n    }\n    # highlight-end\n)\n","import io.milvus.v2.service.collection.request.CreateCollectionReq;\nimport io.milvus.v2.service.collection.request.AlterCollectionReq;\nimport io.milvus.param.Constant;\nimport java.util.HashMap;\nimport java.util.Map;\n\n// With TTL\nCreateCollectionReq customizedSetupReq5 = CreateCollectionReq.builder()\n        .collectionName(\"customized_setup_5\")\n        .collectionSchema(schema)\n        // highlight-next-line\n        .property(Constant.TTL_SECONDS, \"1209600\")\n        .build();\nclient.createCollection(customizedSetupReq5);\n","const createCollectionReq = {\n    collection_name: \"customized_setup_5\",\n    schema: schema,\n    // highlight-start\n    properties: {\n        \"collection.ttl.seconds\": 1209600\n    }\n    // highlight-end\n}\n","import (\n    \"context\"\n    \"fmt\"\n    \"log\"\n\n    \"github.com/milvus-io/milvus/client/v2/milvusclient\"\n    \"github.com/milvus-io/milvus/pkg/common\"\n)\n\nerr = cli.CreateCollection(ctx, client.NewCreateCollectionOption(\"customized_setup_5\", schema).\n        WithProperty(common.CollectionTTLConfigKey, 1209600)) //  TTL in seconds\nif err != nil {\n        // handle error\n}\nfmt.Println(\"collection created\")\n","export params='{\n    \"ttlSeconds\": 1209600\n}'\n\nexport CLUSTER_ENDPOINT=\"http://localhost:19530\"\nexport TOKEN=\"root:Milvus\"\n\ncurl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/collections/create\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d \"{\n    \\\"collectionName\\\": \\\"customized_setup_5\\\",\n    \\\"schema\\\": $schema,\n    \\\"params\\\": $params\n}\"\n","client.alter_collection_properties(\n    collection_name=\"my_collection\",\n    properties={\"collection.ttl.seconds\": 1209600}\n)\n","Map<String, String> properties = new HashMap<>();\nproperties.put(\"collection.ttl.seconds\", \"1209600\");\n\nAlterCollectionReq alterCollectionReq = AlterCollectionReq.builder()\n        .collectionName(\"my_collection\")\n        .properties(properties)\n        .build();\n\nclient.alterCollection(alterCollectionReq);\n","res = await client.alterCollection({\n    collection_name: \"my_collection\",\n    properties: {\n        \"collection.ttl.seconds\": 1209600\n    }\n})\n","ctx, cancel := context.WithCancel(context.Background())\ndefer cancel()\n\nmilvusAddr := \"127.0.0.1:19530\"\n\ncli, err := milvusclient.New(ctx, &milvusclient.ClientConfig{\n    Address: milvusAddr,\n})\nif err != nil {\n    log.Fatal(\"failed to connect to milvus server: \", err.Error())\n}\n\ndefer cli.Close(ctx)\n\nerr = cli.AlterCollectionProperties(ctx, milvusclient.NewAlterCollectionPropertiesOption(\"my_collection\").WithProperty(common.CollectionTTLConfigKey, 60))\nif err != nil {\n    // handle error\n}\n","curl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/collections/alter_properties\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d \"{\n    \\\"collectionName\\\": \\\"customized_setup_5\\\",\n    \\\"properties\\\": {\n        \\\"collection.ttl.seconds\\\": 1209600\n    }\n}\"\n","client.drop_collection_properties(\n    collection_name=\"my_collection\",\n    property_keys=[\"collection.ttl.seconds\"]\n)\n","propertyKeys = new String[1]\npropertyKeys[0] = \"collection.ttl.second\"\n\nDropCollectionReq dropCollectionReq = DropCollectionReq.builder()\n        .collectionName(\"my_collection\")\n        .propertyKeys(propertyKeys)\n        .build();\n\nclient.dropCollection(dropCollectionReq);\n","res = await client.dropCollectionProperties({\n    collection_name: \"my_collection\",\n    properties: [\"collection.ttl.seconds\"]\n})\n","ctx, cancel := context.WithCancel(context.Background())\ndefer cancel()\n\nmilvusAddr := \"127.0.0.1:19530\"\n\ncli, err := milvusclient.New(ctx, &milvusclient.ClientConfig{\n    Address: milvusAddr,\n})\nif err != nil {\n    log.Fatal(\"failed to connect to milvus server: \", err.Error())\n}\n\ndefer cli.Close(ctx)\n\nerr = cli.DropCollectionProperties(ctx, milvusclient.NewDropCollectionPropertiesOption(\"my_collection\", common.CollectionTTLConfigKey))\nif err != nil {\n    // handle error\n}\n","curl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/collections/alter_properties\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d \"{\n    \\\"collectionName\\\": \\\"customized_setup_5\\\",\n    \\\"properties\\\": {\n        \\\"collection.ttl.seconds\\\": 60\n    }\n}\"\n"],"headingContent":"Set Collection TTL","anchorList":[{"label":"Установка TTL коллекции","href":"Set-Collection-TTL","type":1,"isActive":false},{"label":"Обзор","href":"Overview","type":2,"isActive":false},{"label":"Установить TTL","href":"Set-TTL","type":2,"isActive":false},{"label":"Отмена настройки TTL","href":"Drop-TTL-setting","type":2,"isActive":false}]}
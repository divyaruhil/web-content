{"codeList":["analyzer_params = {\n    \"tokenizer\": \"standard\",\n    \"filter\":[{\n        \"type\": \"stemmer\", # Specifies the filter type as stemmer\n        \"language\": \"english\", # Sets the language for stemming to English\n    }],\n}\n","Map<String, Object> analyzerParams = new HashMap<>();\nanalyzerParams.put(\"tokenizer\", \"standard\");\nanalyzerParams.put(\"filter\",\n        Collections.singletonList(\n                new HashMap<String, Object>() {{\n                    put(\"type\", \"stemmer\");\n                    put(\"language\", \"english\");\n                }}\n        )\n);\n","const analyzer_params = {\n    \"tokenizer\": \"standard\",\n    \"filter\":[{\n        \"type\": \"stop\", // Specifies the filter type as stop\n        \"stop_words\": [\"of\", \"to\", \"_english_\"], // Defines custom stop words and includes the English stop word list\n    }],\n};\n","// go\n","# restful\nanalyzerParams='{\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"stemmer\",\n      \"language\": \"english\"\n    }\n  ]\n}'\n\n","analyzer_params = {\n    \"tokenizer\": \"standard\",\n    \"filter\":[{\n        \"type\": \"stemmer\", # Specifies the filter type as stemmer\n        \"language\": \"english\", # Sets the language for stemming to English\n    }],\n}\n","// java\n","// javascript\n","// go\n","# restful\nanalyzerParams='{\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"stemmer\",\n      \"language\": \"english\"\n    }\n  ]\n}'\n\n","['run', 'run', 'look', 'ran', 'runner']\n"],"headingContent":"Stemmer","anchorList":[{"label":"Стеммер","href":"Stemmer","type":1,"isActive":false},{"label":"Конфигурация","href":"Configuration","type":2,"isActive":false},{"label":"Примеры","href":"Examples","type":2,"isActive":false}]}